#!/usr/bin/python3
import os
import pathlib
import json

project_root = pathlib.Path(__file__).parent.parent.absolute()
avro_schemas_folder = os.path.join(project_root, 'apps/@shared/schemas/avro')

for root, dirs, files in os.walk(avro_schemas_folder):
    for name in files:
        full_path = os.path.join(root, name)
        with open(full_path) as json_file:
            data = json.load(json_file)
            just_name = os.path.splitext(name)[0]

            new_file_name = 'avro-' + just_name + '.ts'
            new_file_full_path = os.path.join(
                project_root, 'apps/@shared/types/autogenerated/{}'.format(new_file_name))
            interface_name = f"Persisted{''.join([word.title() for word in data['name'].split('-')])}"
            nl = '\n'
            contents = f'export interface {interface_name} {{\n'
            type_mappings = {
                'string': 'string',
                'boolean': 'boolean',
                'long': 'number',
                'null': 'null'
            }
            for field in data['fields']:
                if not isinstance(field['type'], list):
                    field['type'] = [field['type']]
                type_name = ' | '.join([type_mappings[t]
                                        for t in field['type']])
                contents += f"  {field['name']}: {type_name};\n"
            contents += '}\n'
            with open(new_file_full_path, 'w') as out_file:
                out_file.write(contents)

print('Finished generating Avro -> Typescript interfaces')
